diff --git a/app/assets/javascripts/admin.coffee b/app/assets/javascripts/admin.coffee
new file mode 100644
index 0000000..24f83d1
--- /dev/null
+++ b/app/assets/javascripts/admin.coffee
@@ -0,0 +1,3 @@
+# Place all the behaviors and hooks related to the matching controller here.
+# All this logic will automatically be available in application.js.
+# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/app/assets/stylesheets/admin.scss b/app/assets/stylesheets/admin.scss
new file mode 100644
index 0000000..6b55735
--- /dev/null
+++ b/app/assets/stylesheets/admin.scss
@@ -0,0 +1,3 @@
+// Place all the styles related to the admin controller here.
+// They will automatically be included in application.css.
+// You can use Sass (SCSS) here: http://sass-lang.com/
diff --git a/app/controllers/admin/orders_controller.rb b/app/controllers/admin/orders_controller.rb
index ffbc74d..1afa41b 100644
--- a/app/controllers/admin/orders_controller.rb
+++ b/app/controllers/admin/orders_controller.rb
@@ -1,7 +1,4 @@
 class Admin::OrdersController < ApplicationController
-	layout "admin"
-	before_action :authenticate_user!
-	before_action :admin_required
 
 	def index
 		@orders = Order.order("id DESC")
diff --git a/app/controllers/admin/products_controller.rb b/app/controllers/admin/products_controller.rb
index 7ee9796..28e50eb 100644
--- a/app/controllers/admin/products_controller.rb
+++ b/app/controllers/admin/products_controller.rb
@@ -1,8 +1,5 @@
-class Admin::ProductsController < ApplicationController
-	before_action :authenticate_user!
-	before_action :admin_required
+class Admin::ProductsController < AdminController
 
-	layout "admin"
 
 	def index
 		@products = Product.all
diff --git a/app/controllers/admin_controller.rb b/app/controllers/admin_controller.rb
new file mode 100644
index 0000000..a16eb7f
--- /dev/null
+++ b/app/controllers/admin_controller.rb
@@ -0,0 +1,6 @@
+class AdminController < ApplicationController
+	before_action :authenticate_user!
+	before_action :admin_required
+
+	layout "admin"
+end
diff --git a/app/helpers/admin_helper.rb b/app/helpers/admin_helper.rb
new file mode 100644
index 0000000..d5c6d35
--- /dev/null
+++ b/app/helpers/admin_helper.rb
@@ -0,0 +1,2 @@
+module AdminHelper
+end
diff --git a/app/models/concern.rb b/app/models/concern.rb
new file mode 100644
index 0000000..7f2d662
--- /dev/null
+++ b/app/models/concern.rb
@@ -0,0 +1,5 @@
+module Concern
+  def self.table_name_prefix
+    'concern_'
+  end
+end
diff --git a/app/models/concerns.rb b/app/models/concerns.rb
new file mode 100644
index 0000000..bbcea32
--- /dev/null
+++ b/app/models/concerns.rb
@@ -0,0 +1,5 @@
+module Concerns
+  def self.table_name_prefix
+    'concerns_'
+  end
+end
diff --git a/app/models/concerns/tokenable.rb b/app/models/concerns/tokenable.rb
new file mode 100644
index 0000000..2bee68a
--- /dev/null
+++ b/app/models/concerns/tokenable.rb
@@ -0,0 +1,13 @@
+module Tokenable
+
+  extend ActiveSupport::Concern
+  
+  included do 
+    before_create :generate_token 
+  end
+  
+  
+  def generate_token
+    self.token = SecureRandom.uuid
+  end
+end
\ No newline at end of file
diff --git a/app/models/order.rb b/app/models/order.rb
index 045e8d6..5515e08 100644
--- a/app/models/order.rb
+++ b/app/models/order.rb
@@ -1,13 +1,15 @@
 class Order < ApplicationRecord
-	before_create :generate_token
+  include Tokenable
+
+	# before_create :generate_token
 	belongs_to :user
 	has_many :product_lists
 	validates :first_name, presence: true
 	validates :last_name, presence: true
 	validates :phonenumber, presence: true
-	def generate_token
-		self.token = SecureRandom.uuid		
-	end
+	# def generate_token
+	# 	self.token = SecureRandom.uuid		
+	# end
 	def set_payment_with!(method)
 		self.update_columns(payment_method: method)
 	end
diff --git a/test/controllers/admin_controller_test.rb b/test/controllers/admin_controller_test.rb
new file mode 100644
index 0000000..54f3be4
--- /dev/null
+++ b/test/controllers/admin_controller_test.rb
@@ -0,0 +1,7 @@
+require 'test_helper'
+
+class AdminControllerTest < ActionDispatch::IntegrationTest
+  # test "the truth" do
+  #   assert true
+  # end
+end
